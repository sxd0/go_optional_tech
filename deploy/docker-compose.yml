services:
  kafka:
    image: bitnami/kafka:3.7
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@localhost:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_CFG_MIN_INSYNC_REPLICAS=1
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    healthcheck:
      test: ["CMD-SHELL", "/opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server localhost:9092 --list >/dev/null 2>&1"]
      interval: 5s
      timeout: 5s
      start_period: 20s
      retries: 60



  redis:
    image: redis:7
    ports:
      - "6379:6379"

  api:
    build: ../services/api
    environment:
      - KAFKA_BROKER=kafka:9092
      - KAFKA_TOPIC=events
      - HTTP_ADDR=:8080
    ports:
      - "8080:8080"
    depends_on:
      kafka:
        condition: service_started

  worker:
    build: ../services/worker
    environment:
      - KAFKA_BROKER=kafka:9092
      - KAFKA_TOPIC=events
      - KAFKA_GROUP=mini-worker
      - REDIS_ADDR=redis:6379
    depends_on:
      kafka:
        condition: service_healthy
      redis:
        condition: service_started

  stats:
    build: ../services/stats
    environment:
      - REDIS_ADDR=redis:6379
      - HTTP_ADDR=:8082
    ports:
      - "8082:8082"
    depends_on:
      redis:
        condition: service_started
